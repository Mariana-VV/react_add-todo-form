{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoInfo","userId","todo","usersFromServer","find","classNames","completed","title","includes","TodoList","todos","map","initialTodoState","Math","max","todosFromServer","isHasError","App","useState","newTodo","setNewTodo","setTodos","initialError","setinitialError","handleInputChange","key","value","prev","action","method","onSubmit","event","preventDefault","trim","prevValue","htmlFor","type","placeholder","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb732ff4.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`} key={user.id}>\n      {user.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/TODO';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {usersFromServer.includes(user as User)\n        && <UserInfo user={user as User} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/TODO';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(\n        todo => <TodoInfo todo={todo} data-id={todo.id} key={todo.id} />,\n      )}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/TODO';\n\nconst idForNewTodo = Math.max(...todosFromServer.map(todo => todo.id)) + 1;\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nconst initialTodoState = {\n  id: idForNewTodo,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nconst isHasError = {\n  title: false,\n  userId: false,\n};\n\nexport const App: React.FC = () => {\n  const [newTodo, setNewTodo] = useState(initialTodoState);\n  const [todos, setTodos] = useState(todosFromServer);\n  const [initialError, setinitialError] = useState(isHasError);\n\n  const handleInputChange = (key: string, value: string | number) => {\n    setNewTodo(prev => ({ ...prev, [key]: value }));\n    setinitialError(prev => ({ ...prev, [key]: false }));\n  };\n\n  //   const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //     setNewTodo((prevValue) => ({ ...prevValue, title: event.target.value }));\n  //     setinitialError((prevValue) => ({ ...prevValue, hasTitleError: false }));\n  //   };\n\n  //   const handleUserChange\n  // = (event: React.ChangeEvent<HTMLSelectElement>) => {\n  //   setNewTodo((prevValue) => ({ ...prevValue, userId: +event.target.value }));\n  //   setinitialError((prevValue) => ({ ...prevValue, hasUserIdErrore: false }));\n  // };\n\n  const addTodo = (todo: Todo) => {\n    setTodos([...todos, todo]);\n  };\n\n  const reset = () => {\n    setNewTodo(initialTodoState);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!newTodo.title.trim()) {\n      setinitialError((prevValue) => ({ ...prevValue, title: true }));\n    }\n\n    if (!newTodo.userId) {\n      setinitialError((prevValue) => ({ ...prevValue, userId: true }));\n    }\n\n    if (!newTodo.title.trim() || !newTodo.userId) {\n      return;\n    }\n\n    addTodo(newTodo);\n    setinitialError((prevValue) => ({ ...prevValue, title: false }));\n    setinitialError((prevValue) => ({ ...prevValue, userId: false }));\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"\">\n            Title\n            <input\n              value={newTodo.title}\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a todo\"\n              onChange={(event) => handleInputChange(\n                'title', event.target.value,\n              )}\n            />\n          </label>\n          {initialError.title\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={newTodo.userId}\n            data-cy=\"userSelect\"\n            onChange={(event) => handleInputChange(\n              'userId', +event.target.value,\n            )}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {initialError.userId\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}